using System;
using System.Collections.Generic;
using System.Text;

using Xunit;
using TaskSolving.BinaryConvertion;

namespace TaskSolving.Test
{
    public class HammingCodeTest
    {
        [Fact]
        public void testing1_encode_function()
        {
            Assert.Equal("000111111000111000000000000111111000000111000111000111111111111000000111", HammingCode.encode("hey"));
            Assert.EqualammingCode.encode("The Sensei told me that i can do this kata"));
            Assert.Equal("000111000111000111000000000000111111000000111111000111111111000000111111000111111111000111000000", HammingCode.encode("T3st"));
            Assert.Equal("000111000111000111000000000000111111111111111111000111111111000000111111000111111111000111000000000000111000000000000111000000111000000111000111", HammingCode.encode("T?st!%"));
        }
        [Fact]
        public void testing2_decode_function()
        {
            Assert.Equal("hey", HammingCode.decode("100111111000111001000010000111111000000111001111000111110110111000010111"));
            Assert.Equal("The Sensei told me that i can do this kata", HammingCode.decode
            Assert.Equal("T3st", HammingCode.decode("000111000111000111000001000000111111000000111111000111111111000000111011000111111111000111000000"));
            Assert.Equal("T?st!%", HammingCode.decode("000111000111000111000010000000111111111111011111000111111111000000111111000111101111000111000000000000111000000000000111000000111000000111000111"));
        }
    }
}
